"""
Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file 
distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file to you 
under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.  

You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
specific language governing permissions and limitations under the License.
"""

# Lambda function to send AWS CloudWatch Log data to a Sumo hosted HTTP collector

# Import Modules
import json
import base64
import zlib
import urllib
import urllib2
from StringIO import StringIO

# Define Globals
sumologicUrl = [SUMOLOGIC-URL]

# Define Helper Functions

# Define Classes

# Define Event Handler
def lambda_handler(event, context):
    """ Event Handler for CloudWatch events """
    
    # Decode events 
    e = base64.b64decode(event['awslogs']['data'])
    e = e.strip('"')

    # Decompress data
    z = zlib.decompress(e, 16+zlib.MAX_WBITS)
        
    j = json.loads(z)

    for event in j['logEvents']:
        data = json.dumps(event)
        
        # Check for throttling, if '200' send data to Sumo otherwise archive to S3
        r = urllib.urlopen(sumologicUrl)
        
        if r.getcode() == 200:
            print(urllib2.urlopen(sumologicUrl, data).read())
            print("Success")
        else:
            print("Throttling in progress")
